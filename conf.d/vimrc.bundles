" vim: set sw=2 ts=2 sts=2 et tw=78 foldmarker={,} foldlevel=0 foldmethod=marker spell:

set nocompatible        " Must be first line
set background=dark

" Plugins {

" Deps {
"Plug 'gmarik/vundle'
Plug 'MarcWeber/vim-addon-mw-utils'
"Plug 'tomtom/tlib_vim'
if executable('ag')
  Plug 'mileszs/ack.vim'
  let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
elseif executable('ack-grep')
  let g:ackprg="ack-grep -H --nocolor --nogroup --column"
  Plug 'mileszs/ack.vim'
elseif executable('ack')
  Plug 'mileszs/ack.vim'
endif
" }

if !exists('g:spf13_bundle_groups')
  "let g:spf13_bundle_groups=['general', 'neocomplete', 'programming', 'php', 'python', 'javascript', 'html', 'misc']
  let g:spf13_bundle_groups=['general', 'programming', 'php', 'python', 'javascript', 'html', 'misc', 'syntax']
endif

"   let g:override_spf13_bundles = 1
if !exists("g:override_spf13_bundles")

  if count(g:spf13_bundle_groups, 'general')
    Plug 'scrooloose/nerdtree'
    Plug 'spf13/vim-colors'
    Plug 'tpope/vim-surround'
    Plug 'tmhedberg/matchit'
    Plug 'vim-airline/vim-airline'
    Plug 'vim-airline/vim-airline-themes'
    Plug 'jlanzarotta/bufexplorer'
    Plug 'godlygeek/csapprox'
    Plug 'jistr/vim-nerdtree-tabs'
    Plug 'flazz/vim-colorschemes'
    Plug 'nathanaelkane/vim-indent-guides'
    Plug 'Shougo/vimproc.vim'
  endif

  if count(g:spf13_bundle_groups, 'syntax')
    "Plug 'vim-syntastic/syntastic'
    Plug 'w0rp/ale'
  endif

  if count(g:spf13_bundle_groups, 'programming')
    Plug 'tpope/vim-fugitive'
    Plug 'scrooloose/nerdcommenter'
    Plug 'vim-scripts/Align'
    if executable('ctags')
      Plug 'majutsushi/tagbar'
    endif
    Plug 'terryma/vim-multiple-cursors'
  endif

  if count(g:spf13_bundle_groups, 'snipmate')
    Plug 'garbas/vim-snipmate'
    Plug 'honza/vim-snippets'
    " Source support_function.vim to support vim-snippets.
    if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
      source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
    endif
  elseif count(g:spf13_bundle_groups, 'neocomplete')
    Plug 'Shougo/neocomplete.vim'
    Plug 'Shougo/neosnippet'
    Plug 'Shougo/neosnippet-snippets'
    Plug 'honza/vim-snippets'
  endif

  if count(g:spf13_bundle_groups, 'php')
  " Plug 'spf13/PIV'
    "Plug 'arnaud-lb/vim-php-namespace'
    " Improved automatic folding based on syntax
    Plug 'rayburgemeestre/phpfolding.vim'
    " Debugger
    Plug 'joonty/vdebug'
    " Completion daemon
    Plug 'lvht/phpcd.vim', { 'for': 'php', 'do': 'composer install' }
    Plug 'arnaud-lb/vim-php-namespace'
  endif

  if count(g:spf13_bundle_groups, 'ruby')
    Plug 'vim-ruby/vim-ruby'
    Plug 'tpope/vim-rails'
  endif

  if count(g:spf13_bundle_groups, 'python')
    " Pick either python-mode or pyflakes & pydoc
    Plug 'klen/python-mode'
    " Plug 'python.vim'
    " Plug 'python_match.vim'
    " Plug 'pythoncomplete'
  endif

  if count(g:spf13_bundle_groups, 'javascript')
    Plug 'elzr/vim-json'
    Plug 'groenewege/vim-less'
    Plug 'pangloss/vim-javascript'
    Plug 'briancollins/vim-jst'
  endif

  if count(g:spf13_bundle_groups, 'html')
    " Plug 'amirh/HTML-AutoCloseTag'
    Plug 'hail2u/vim-css3-syntax'
  endif

  if count(g:spf13_bundle_groups, 'misc')
    Plug 'tpope/vim-markdown'
    "Plug 'spf13/vim-preview'
    Plug 'vim-scripts/DoxygenToolkit.vim'
    " vim-notes depends on vim-misc
    Plug 'xolox/vim-misc'
    Plug 'xolox/vim-notes'
  endif

  if exists("g:spf13_bundle_syntax")
    for b in g:spf13_bundle_syntax
      Plug b
    endfor
  endif

  if exists("g:spf13_bundle_custom")
    for b in g:spf13_bundle_custom
      Plug b
    endfor
  endif

endif
" }

  " General {
  " set autowrite                  " automatically write a file when leaving a modified buffer
  set shortmess+=filmnrxoOtT      " Abbrev. of messages (avoids 'hit enter')
  " }

" vim-plug initialization end
call plug#end()
